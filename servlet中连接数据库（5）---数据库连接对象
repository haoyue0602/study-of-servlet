package hy0602_java_servlet;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ResourceBundle;

/**
 * 连接数据库操作
 */
public class DBHelp {

	static String driver; 
	static String conn;
	static String username;
	static String password;
  //连接数据库的参数
	static{
		ResourceBundle resource = ResourceBundle.getBundle("dbinfo");
		driver = resource.getString("driver");
		conn = resource.getString("conn");
		username = resource.getString("username");
		password = resource.getString("password");
	}
	
	/**
	 * 获取数据库连接对象
	 */
	public static Connection getConnection(){
		Connection connection = null;
		try {
			Class.forName(driver);			
			connection =
					DriverManager.getConnection(conn, username, password);
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return connection;
	}

	/**
	 * insert,update,delete操作
	 */
	public static int executeSql(String sql){
		int count = 0;
		Connection connection = null;
		Statement statement = null;
		try {
			connection = getConnection();
			//手动提交事务
			connection.setAutoCommit(false);
			statement = connection.createStatement();		
			count = statement.executeUpdate(sql);
			//提交事务
			connection.commit();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			//回滚事务
			try {
				connection.rollback();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			e.printStackTrace();
		} finally{
			closeAll(null,statement,connection);
		}
		
		return count;
	}
	
	/**
	 * insert,update,delete操作
	 */
	public static int executeSql(String sql  ,Object... parameters){
		int count = 0;
		Connection connection = null;
		PreparedStatement statement = null;
		try {
			connection = getConnection();
			statement = connection.prepareStatement(sql);
			//设置占位符的实参值
			if(parameters!=null && parameters.length>0){
				for(int i=0;i<parameters.length;i++){
					statement.setObject(i+1, parameters[i]);
				}
			}
			count = statement.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally{
			closeAll(null,statement,connection);
		}
		
		return count;
	}
	
	public static void closeAll(ResultSet rs,Statement st,Connection connection){
		try {
			if(rs != null)
				rs.close();
			if(st != null)
				st.close();
			if(connection != null)
				connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
